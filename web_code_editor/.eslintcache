[{"D:\\funMixProj\\web_code_editor\\src\\index.js":"1","D:\\funMixProj\\web_code_editor\\src\\reportWebVitals.js":"2","D:\\funMixProj\\web_code_editor\\src\\App.js":"3","D:\\funMixProj\\web_code_editor\\src\\constant.js":"4","D:\\funMixProj\\web_code_editor\\src\\stdLibrary.js":"5","D:\\funMixProj\\web_code_editor\\src\\mainFun.js":"6","D:\\funMixProj\\web_code_editor\\src\\utils.js":"7","D:\\funMixProj\\web_code_editor\\src\\components\\Button.jsx":"8","D:\\funMixProj\\web_code_editor\\src\\components\\Editor.jsx":"9"},{"size":517,"mtime":1664614896371,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1664614896371,"results":"12","hashOfConfig":"11"},{"size":3964,"mtime":1664751021826,"results":"13","hashOfConfig":"11"},{"size":599,"mtime":1664657455001,"results":"14","hashOfConfig":"11"},{"size":16999,"mtime":1664656057034,"results":"15","hashOfConfig":"11"},{"size":4303,"mtime":1664657629954,"results":"16","hashOfConfig":"11"},{"size":532,"mtime":1664657474987,"results":"17","hashOfConfig":"11"},{"size":423,"mtime":1664722388773,"results":"18","hashOfConfig":"11"},{"size":1712,"mtime":1664614896370,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"osmmxu",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\funMixProj\\web_code_editor\\src\\index.js",[],["40","41"],"D:\\funMixProj\\web_code_editor\\src\\reportWebVitals.js",[],"D:\\funMixProj\\web_code_editor\\src\\App.js",["42","43","44","45","46"],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Button from './components/Button';\r\nimport Editor from './components/Editor';\r\n// import  {compileFunc} from \"ton-compiler\";\r\n// import mainFc from \"./main.fc\"\r\n// import {compileFunc, compilerVersion} from '@ton-community/func-js';\r\n// import {Cell} from 'ton';\r\n// import {library} from './stdLibrary';\r\n// import {mainFun} from './mainFun';\r\n// import stdLib from '../../back-end/stdLibrary.fc'\r\n// // import mainFun from './mainFun.fc'\r\n// import {constant} from \"./constant\";\r\n// import {utils} from \"./utils\";\r\n// import  fs from 'fs'\r\n\r\nfunction App () {\r\n  const [items, setItems] = useState([]);\r\n\r\n\r\n  const fetchItems = async (text) => {\r\n    fetch(`/api/${text}`).then(async response => {\r\n      console.info(decodeURI(response.url));\r\n      let data = await response.json()\r\n      console.log(data);\r\n      setOutputMsg(data);\r\n    })\r\n  }\r\n  const [openedEditor, setOpenedEditor] = useState('html');\r\n\r\n  const [html, setHtml] = useState('');\r\n  const [css, setCss] = useState('');\r\n  const [js, setJs] = useState('');\r\n  const [srcDoc, setSrcDoc] = useState(``);\r\n  const [outputMsg,setOutputMsg] = useState('');\r\n\r\n  useEffect(()=>{\r\n    // document.getElementById('javascript-btn').firstChild.firstChild.textContent = 'FunC'\r\n  },[])\r\n\r\n\r\n  const onTabClick = (editorName) => {\r\n    setOpenedEditor(editorName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setSrcDoc(\r\n        `\r\n          <html>\r\n            <body>${html}</body>\r\n            <style>${css}</style>\r\n            <script>${js}</script>\r\n          </html>\r\n        `\r\n      )\r\n    }, 250);\r\n\r\n    return () => clearTimeout(timeOut)\r\n  }, [html, css, js])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(outputMsg.status ==='ok') ? (<div style={{display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      }}>\r\n        <h3>Your reward:</h3>\r\n        <img style={{width:'45%',border:'10px solid #5bd65b'}} src={\"./nft.jpeg\"}></img>\r\n        <div style={{marginTop:'2rem'}}>\r\n          <Button title={'Claim it'}></Button>\r\n        </div>\r\n      </div>) : (\r\n          <>\r\n            <div id='compile-button' style={{marginBottom:'3rem'}} className=\"tab-button-container\">\r\n              <Button title={\"Compile\"} onClick={()=>{\r\n                let result = ''\r\n                document.querySelectorAll('.CodeMirror-line ').forEach((e)=>{\r\n                  result +=`${e.textContent}$`;\r\n                })\r\n                console.log(result);\r\n                fetchItems(result)\r\n              }\r\n              }></Button>\r\n            </div>\r\n            <div className=\"editor-container\">\r\n              {\r\n                openedEditor === 'html' ? (\r\n                    <Editor\r\n                        language=\"xml\"\r\n                        displayName=\"HTML\"\r\n                        value={html}\r\n                        setEditorState={setHtml}\r\n                    />\r\n                ) : openedEditor === 'css' ? (\r\n                    <Editor\r\n                        language=\"css\"\r\n                        displayName=\"CSS\"\r\n                        value={css}\r\n                        setEditorState={setCss}\r\n                    />\r\n                ) : (\r\n                    <Editor\r\n                            language=\"javascript\"\r\n                            displayName=\"JS\"\r\n                            value={js}\r\n                            setEditorState={setJs}/>\r\n                )\r\n              }\r\n            </div>\r\n\r\n            <div className=\"fakeScreen\">\r\n\r\n              <h3 style={{color:(outputMsg.status===\"ok\") ? 'green': 'red'}} >Status:{outputMsg.status}</h3>\r\n              <p className=\"line1\">{(outputMsg.message)}<span className=\"cursor1\">_</span></p>\r\n            </div>\r\n          </>\r\n      )\r\n        }\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\funMixProj\\web_code_editor\\src\\constant.js",[],"D:\\funMixProj\\web_code_editor\\src\\stdLibrary.js",[],"D:\\funMixProj\\web_code_editor\\src\\mainFun.js",[],"D:\\funMixProj\\web_code_editor\\src\\utils.js",[],"D:\\funMixProj\\web_code_editor\\src\\components\\Button.jsx",[],"D:\\funMixProj\\web_code_editor\\src\\components\\Editor.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":18,"column":10,"nodeType":"53","messageId":"54","endLine":18,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":18,"column":17,"nodeType":"53","messageId":"54","endLine":18,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":34,"column":10,"nodeType":"53","messageId":"54","endLine":34,"endColumn":16},{"ruleId":"51","severity":1,"message":"57","line":42,"column":9,"nodeType":"53","messageId":"54","endLine":42,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":70,"column":9,"nodeType":"60","endLine":70,"endColumn":83},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","'setItems' is assigned a value but never used.","'srcDoc' is assigned a value but never used.","'onTabClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]